<!DOCTYPE html>
<html>
  <head>
    <% include include/head %>
  </head>
  <body>
    <% include include/menu-left %>

    <header class="header-question">
      <span class="menu-center">Question N° <%= idQuestion %> : <%= question.libelle %></span>
      <div id="countdown"></div>
    </header>

    <section class="countdown">
      <div id="progressBar">
        <div></div>
      </div>
    </section>

    <section class="reponses">
      <% if(JSON.parse(utilisateur).role){ %>
      <div class="received"></div>
      <% }else{ %>
        <% for(var i=0; i < reponses.length; i++) { %>
          <a id="<%= reponses[i].id %>" href="#" onclick="reponse(this)">
            <div class="card">
              <%= reponses[i].libelle %>
            </div>
          </a>
        <% } %>
      <% } %>
    </section>
  </body>
  <script src="/socket.io/socket.io.js"></script>
  <script type="text/javascript">
    var socket = io.connect('http://localhost:8080');
    var user = <%- utilisateur %>

    $(".card").on("click", function() {
      $(".card").css("background", "#c25e54");
      $(this).css("background", "#282c34");
    });

    // Envoie au serveur la connexion de l'utilisateur à la question idQuestion
    socket.emit('connectToQuestion', {'user': user, 'question': <%= idQuestion %>});

    socket.on('reponse', function(data){4
      var reponses = document.getElementsByClassName("received")[0];
      var p = document.createElement("p");
      var contenu = document.createTextNode(data.user.pseudo + " a répondu " + data.reponse.libelle);
      p.appendChild(contenu);
      reponses.appendChild(p);
    });

    // Envoie la réponse au serveur
    function reponse(element){
        var idReponse = element.id;
        socket.emit('reponse', {'idReponse': idReponse, 'user': user, 'idQuestion': <%= idQuestion %>, 'idQuestionnaire': <%= idQuestionnaire %>});
    } 

    function progress(percent, $element, time) {
        var progressBarWidth = percent * $element.width() / 100;
        $element.find('div').animate({ width: progressBarWidth }, time);
    }

    function countdown( elementName, minutes, seconds )
    {
        var element, endTime, hours, mins, msLeft, time;

        function twoDigits( n )
        {
            return (n <= 9 ? "0" + n : n);
        }

        function updateTimer()
        {
            msLeft = endTime - (+new Date);
            if ( msLeft < 1000 ) {
                element.innerHTML = "Times up !";
            } else {
                time = new Date( msLeft );
                hours = time.getUTCHours();
                mins = time.getUTCMinutes();
                element.innerHTML = (hours ? hours + ':' + twoDigits( mins ) : mins) + ':' + twoDigits( time.getUTCSeconds() );
                setTimeout( updateTimer, time.getUTCMilliseconds() + 500 );
            }
        }

        element = document.getElementById( elementName );
        endTime = (+new Date) + 1000 * (60*minutes + seconds) + 500;
        updateTimer();
        progress(100, $('#progressBar'),(minutes*60000 + seconds*1000));

    }

    countdown("countdown", 0, 30 );
  </script>
</html>
